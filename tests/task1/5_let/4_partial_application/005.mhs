main :: Int
     =
    let f :: (Int -> Int -> Int) =
        letfun f :: (Int -> Int -> Int) x =
            letfun g :: (Int -> Int) y = x * -y;

    in let z :: (Int -> Int -> Int) = 
        letfun z :: (Int -> Int -> Int) x = f 3;   -- discards 2, returns \y -> 3 * -y

    in z 2 4;
            
